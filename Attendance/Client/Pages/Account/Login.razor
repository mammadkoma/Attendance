@page "/account/login"
@using Attendance.Shared.Dtos
@using System.Net.Http.Headers
@using System.Security.Claims
<PageTitle>ورود به سیستم</PageTitle>

<EditForm Model="loginVM" OnValidSubmit="SubmitForm" class="card card-body bg-light">
    <DataAnnotationsValidator />
    <div class="mb-3 col-xl-5">
        <MyLabel TItem="LoginVM" aspfor="@nameof(loginVM.Email)"></MyLabel>
        <InputText id="@nameof(loginVM.Email)" @bind-Value="loginVM.Email" class="form-control" dir="ltr"></InputText>
        <ValidationMessage For="@(() => loginVM.Email)" />
    </div>
    <div class="mb-3 col-xl-5">
        <MyLabel TItem="LoginVM" aspfor="@nameof(loginVM.Password)"></MyLabel>
        <InputText id="@nameof(loginVM.Password)" @bind-Value="loginVM.Password" type="password" class="form-control"
                   dir="ltr"></InputText>
        <ValidationMessage For="@(() => loginVM.Password)" />
    </div>

    <div>
        <button type="submit" class="btn btn-success">ارسال</button>
    </div>
</EditForm>


@code {
    private LoginVM loginVM = new();

    [Inject]
    public AuthenticationStateProvider _authStateProvider { get; set; }

    private async Task SubmitForm()
    {
        var response = await _http.PostAsJsonAsync("api/accounts/login", loginVM);
        var content = await response.Content.ReadAsStringAsync();
        var loginDto = JsonSerializer.Deserialize<LoginDto>(content);
        await _localStorage.SetItemAsync("authToken", loginDto.Token);
        _http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", loginDto.Token);
        (_authStateProvider as AuthStateProvider).NotifyLogin(loginDto.FullName);
        _navigationManager.NavigateTo("/");
    }
}